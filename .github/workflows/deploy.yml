name: Deploy React App

on:
  push:
    branches:
      - main
      - dev
      - test
      - stag

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          BRANCH_NAME=${{ github.ref_name }}
          echo "Deploying branch: $BRANCH_NAME to EC2 instance at ${{ secrets.EC2_HOST }}"
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "bash -s" <<EOF
          set -e
          echo "Connected to EC2. Starting deployment for branch: $BRANCH_NAME"
          PROJECT_DIR="/home/ubuntu/kwick-ui-frontend"

          # Ensure Bun is installed
          if ! command -v bun &> /dev/null; then
            echo "Bun is not installed. Installing Bun..."
            curl -fsSL https://bun.sh/install | bash
            export PATH="\$HOME/.bun/bin:\$PATH"
            source ~/.bashrc
          fi
          echo "Bun is installed at: \$(command -v bun)"

          # Debug and clean up existing directory
          if [ -d "$PROJECT_DIR" ]; then
            echo "Directory exists. Debugging contents before removal:"
            sudo ls -la $PROJECT_DIR
            echo "Cleaning up existing directory."
            sudo chmod -R 777 $PROJECT_DIR
            sudo rm -rf $PROJECT_DIR
          fi

          # Verify cleanup
          if [ -d "$PROJECT_DIR" ]; then
            echo "Directory still exists after cleanup. Debugging further:"
            sudo ls -la $PROJECT_DIR
            echo "Force removing files and directories."
            sudo find $PROJECT_DIR -type f -exec rm -f {} \;
            sudo find $PROJECT_DIR -type d -exec rm -rf {} +
            sudo rm -rf $PROJECT_DIR
          fi

          # Final check for cleanup
          if [ -d "$PROJECT_DIR" ]; then
            echo "Directory still exists after all cleanup attempts. Exiting."
            exit 1
          fi

          # Clone the repository
          echo "Cloning repository."
          git clone https://github.com/persistsolution/kwick-ui-frontend.git $PROJECT_DIR

          # Debug cloned directory
          echo "Contents of cloned directory after git clone:"
          ls -la $PROJECT_DIR

          # Navigate to the cloned directory
          cd $PROJECT_DIR
          echo "Switched to project directory: \$(pwd)"

          # Validate package.json
          if [ ! -f "package.json" ]; then
            echo "Error: package.json not found in the cloned repository."
            ls -la
            exit 1
          fi

          # Checkout the correct branch
          git checkout $BRANCH_NAME || echo "Failed to checkout branch: $BRANCH_NAME"

          # Install dependencies using Bun
          bun install --no-cache || exit 1

          echo "Installing dependencies completed. Restarting the service for $BRANCH_NAME."
          case "$BRANCH_NAME" in
            main)
              pm2 restart main --update-env || pm2 start "bun dev --port 5173" --name main
              ;;
            dev)
              pm2 restart dev --update-env || pm2 start "bun dev --port 5174" --name dev
              ;;
            test)
              pm2 restart test --update-env || pm2 start "bun dev --port 5175" --name test
              ;;
            stag)
              pm2 restart stag --update-env || pm2 start "bun dev --port 5176" --name stag
              ;;
          esac
          echo "Deployment for $BRANCH_NAME completed."
          EOF
