name: Deploy React App with Docker

on:
  push:
    branches:
      - main
      - dev
      - test
      - stag
      - dockertest

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Docker Buildx for multi-platform builds (optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log into Docker Hub using credentials stored in GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Set Docker image tag based on the branch name
      - name: Set Docker image tag
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Using branch name: $BRANCH_NAME"
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/kwick-ui-frontend:$BRANCH_NAME"
          echo "Docker image tag: $IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # Build Docker image from Dockerfile
      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_TAG }} .

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ env.IMAGE_TAG }}

      # Set up SSH key for EC2 access
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Deploy to EC2 and Run Docker container
      - name: Deploy to EC2 and Run Docker container
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "
            # Step 1: Stop and remove the existing container if it exists
            if [ \$(docker ps -aq -f name=kwick-ui-frontend-container) ]; then
              docker stop kwick-ui-frontend-container
              docker rm kwick-ui-frontend-container
            fi

            # Step 2: Check if any process is using port 5173 and kill it if necessary
            sudo lsof -t -i:5173 | xargs -r sudo kill -9

            # Step 3: Clean up unused Docker networks and volumes
            docker network prune -f
            docker volume prune -f

            # Step 4: Pull the latest Docker image
            docker pull ${{ env.IMAGE_TAG }}

            # Step 5: Run the new Docker container on a different external port (5180)
            docker run -d -p 5181:5173 --name kwick-ui-frontend-container ${{ env.IMAGE_TAG }}
          "
